Перем мСоответствиеИдентификаторовТипов Экспорт;

// Возвращает UUID по переданной ссылке
Функция ПолучитьUUID(Ссылка) Экспорт
	
	стрGUID = Строка(Ссылка.УникальныйИдентификатор());
	
	Типы = СоответствиеТиповИдентификаторов();
	
	ИмяМетаданного = Метаданные.НайтиПоТипу(ТипЗнч(Ссылка)).ПолноеИмя();
	
	Поз1 = Найти(ИмяМетаданного, ".");
	ИмяМетаданного = Лев(ИмяМетаданного, Поз1 - 1) + "Ссылка" + Сред(ИмяМетаданного, Поз1);
	НомерТипа = Типы.Получить(ИмяМетаданного);
		
	UUID = НомерТипа + ":" + GUIDToUUID(стрGUID);
	
	Возврат UUID;
	
КонецФункции	

// Возвращает ссылку по UUID
Функция ПолучитьСсылку(UUID) Экспорт
	
	ПредставлениеСсылки = "(" + UUID + ")";
	СтруктураРасшифровки =  РасшифровкаПредставленияБитойСсылки(ПредставлениеБитойСсылки);
	
	// Получим менеджер объекта
	Если СтрНайти(СтруктураРасшифровки.Тип, "СправочникСсылка") Тогда
		Менеджер = Справочники[СтрЗаменить(СтруктураРасшифровки.Тип, "СправочникСсылка.", "")];
	ИначеЕсли СтрНайти(СтруктураРасшифровки.Тип, "ДокументСсылка") Тогда
		Менеджер = Справочники[СтрЗаменить(СтруктураРасшифровки.Тип, "ДокументСсылка.", "")];
	ИначеЕсли СтрНайти(СтруктураРасшифровки.Тип, "ПланВидовХарактеристикСсылка") Тогда
		Менеджер = Справочники[СтрЗаменить(СтруктураРасшифровки.Тип, "ПланВидовХарактеристикСсылка.", "")];
	ИначеЕсли СтрНайти(СтруктураРасшифровки.Тип, "ПланСчетовСсылка") Тогда
		Менеджер = Справочники[СтрЗаменить(СтруктураРасшифровки.Тип, "ПланСчетовСсылка.", "")];
	ИначеЕсли СтрНайти(СтруктураРасшифровки.Тип, "БизнесПроцессСсылка") Тогда
		Менеджер = Справочники[СтрЗаменить(СтруктураРасшифровки.Тип, "БизнесПроцессСсылка.", "")];
	ИначеЕсли СтрНайти(СтруктураРасшифровки.Тип, "ЗадачаСсылка") Тогда
		Менеджер = Справочники[СтрЗаменить(СтруктураРасшифровки.Тип, "ЗадачаСсылка.", "")];
	ИначеЕсли СтрНайти(СтруктураРасшифровки.Тип, "ПланОбменаСсылка") Тогда
		Менеджер = Справочники[СтрЗаменить(СтруктураРасшифровки.Тип, "ПланОбменаСсылка.", "")];
	КонецЕсли;	
	
	Ссылка = Менеджер.ПолучитьСсылку(Новый УникальныйИдентификатор(СтруктураРасшифровки.GUID));
	
	Возврат Ссылка;
	
КонецФункции	



 // Представление битой ссылки: Объект не найден (TypeID:UUID)
 // TypeID - идентификатор типа
 // UUID - глобальный идентификатор
 Функция СтруктураПредставленияБитойСсылки(ПредставлениеБитойСсылки)

     // Ищем позицию скбоки
     Поз1 = Найти(ПредставлениеБитойСсылки, "(");
     Поз2 = Найти(ПредставлениеБитойСсылки, ":");

     Если Поз1 > 0 И Поз2 > 0 И Поз2 > Поз1 Тогда
         TypeID = Сред(ПредставлениеБитойСсылки, Поз1 + 1, Поз2 - Поз1 - 1);
         UUID = Сред(ПредставлениеБитойСсылки, Поз2 + 1, 32);
     Иначе
         TypeID = "";
         UUID = ПредставлениеБитойСсылки;
     КонецЕсли;

     Возврат Новый Структура("TypeID, UUID", TypeID, UUID);

 КонецФункции
 
 // Возвращает соответствие: Строка определения типа - Идентификатор типа (строка)
 Функция СоответствиеТиповИдентификаторов()

     Соответствие = Новый Соответствие;

     МассивКоллекцийМенеджеровСсылочныхОбъектов = Новый Массив;
     МассивКоллекцийМенеджеровСсылочныхОбъектов.Добавить(Справочники);
     МассивКоллекцийМенеджеровСсылочныхОбъектов.Добавить(Документы);
     МассивКоллекцийМенеджеровСсылочныхОбъектов.Добавить(ПланыВидовХарактеристик);
     МассивКоллекцийМенеджеровСсылочныхОбъектов.Добавить(ПланыСчетов);
     МассивКоллекцийМенеджеровСсылочныхОбъектов.Добавить(БизнесПроцессы);
     МассивКоллекцийМенеджеровСсылочныхОбъектов.Добавить(Задачи);
     МассивКоллекцийМенеджеровСсылочныхОбъектов.Добавить(ПланыОбмена);

     Для Каждого КоллекцияМенеджеровСсылочныхОбъектов Из МассивКоллекцийМенеджеровСсылочныхОбъектов Цикл
         Для Каждого МенеджерСсылоногоОбъекта Из КоллекцияМенеджеровСсылочныхОбъектов Цикл
             БитаяСсылка = МенеджерСсылоногоОбъекта.ПолучитьСсылку(Новый УникальныйИдентификатор);
             Соответствие.Вставить(СтрЗаменить(БитаяСсылка.Метаданные().ПолноеИмя(), ".", "Ссылка."), СтруктураПредставленияБитойСсылки(Строка(БитаяСсылка)).TypeID);
         КонецЦикла;
     КонецЦикла;

     Возврат Соответствие;

 КонецФункции
 
  // Возвращает соответствие: Идентификатор типа (строка) - Строка определения типа
 Функция СоответствиеИдентификаторовТипов()

     Соответствие = Новый Соответствие;

     МассивКоллекцийМенеджеровСсылочныхОбъектов = Новый Массив;
     МассивКоллекцийМенеджеровСсылочныхОбъектов.Добавить(Справочники);
     МассивКоллекцийМенеджеровСсылочныхОбъектов.Добавить(Документы);
     МассивКоллекцийМенеджеровСсылочныхОбъектов.Добавить(ПланыВидовХарактеристик);
     МассивКоллекцийМенеджеровСсылочныхОбъектов.Добавить(ПланыСчетов);
     МассивКоллекцийМенеджеровСсылочныхОбъектов.Добавить(БизнесПроцессы);
     МассивКоллекцийМенеджеровСсылочныхОбъектов.Добавить(Задачи);
     МассивКоллекцийМенеджеровСсылочныхОбъектов.Добавить(ПланыОбмена);

     Для Каждого КоллекцияМенеджеровСсылочныхОбъектов Из МассивКоллекцийМенеджеровСсылочныхОбъектов Цикл
         Для Каждого МенеджерСсылоногоОбъекта Из КоллекцияМенеджеровСсылочныхОбъектов Цикл
             БитаяСсылка = МенеджерСсылоногоОбъекта.ПолучитьСсылку(Новый УникальныйИдентификатор);
             Соответствие.Вставить(СтруктураПредставленияБитойСсылки(Строка(БитаяСсылка)).TypeID, СтрЗаменить(БитаяСсылка.Метаданные().ПолноеИмя(), ".", "Ссылка."));
         КонецЦикла;
     КонецЦикла;

     Возврат Соответствие;

 КонецФункции

 // Возвращает структуру: "TypeID, UUID, Тип, GUID"
 Функция РасшифровкаПредставленияБитойСсылки(ПредставлениеБитойСсылки) Экспорт

     Если мСоответствиеИдентификаторовТипов = Неопределено Тогда
         мСоответствиеИдентификаторовТипов = СоответствиеИдентификаторовТипов();
     КонецЕсли;

     СтруктураПредставления = СтруктураПредставленияБитойСсылки(ПредставлениеБитойСсылки);

     СтрокаТипа = мСоответствиеИдентификаторовТипов[СтруктураПредставления.TypeID];
     Если СтрокаТипа = Неопределено Тогда
         СтрокаТипа = "Неопределено";
     КонецЕсли;

     Возврат Новый Структура("TypeID, UUID, Тип, GUID", СтруктураПредставления.TypeID, СтруктураПредставления.UUID, СтрокаТипа, UUIDToGUID(СтруктураПредставления.UUID));

 КонецФункции

 //////////////////////////////////////////////////

Функция UUIDToGUID(UUID) Экспорт

    Возврат Прав(UUID, 8) + "-" + Сред(UUID, 21, 4) + "-" + Сред(UUID, 17, 4) + "-" + Лев(UUID, 4) + "-" + Сред(UUID, 5, 12);

КонецФункции

//////////////////////////////////////////////////

Функция GUIDToUUID(GUID) Экспорт

    Возврат Сред(GUID, 20, 4) + Прав(GUID, 12) + Сред(GUID, 15, 4) + Сред(GUID, 10, 4) + Лев(GUID, 8);

КонецФункции

//////////////////////////////////////////////////
